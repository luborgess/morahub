import React from 'react';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { 
  Briefcase, BookOpen, Building2, ChefHat, Gift, Laptop, Package, 
  Pencil, Repeat, Scissors, ShoppingBag, Tag, Timer, 
  User, Settings, Star
} from 'lucide-react';

type ListingType = 'SALE' | 'RENT' | 'DONATION' | 'EXCHANGE';
type ListingStatus = 'ACTIVE' | 'SOLD' | 'RESERVED' | 'DELETED';

interface Category {
  id: string;
  name: string;
  icon: React.ReactNode;
  description: string;
  count: number;
}

const categories: Category[] = [
  {
    id: '1',
    name: 'Eletrônicos',
    icon: <Laptop className="w-6 h-6" />,
    description: 'Computadores, celulares e acessórios',
    count: 42
  },
  {
    id: '2',
    name: 'Livros',
    icon: <BookOpen className="w-6 h-6" />,
    description: 'Material acadêmico e literatura',
    count: 156
  },
  {
    id: '3',
    name: 'Mobilidade',
    icon: <Briefcase className="w-6 h-6" />,
    description: 'Bicicletas e patinetes',
    count: 23
  },
  {
    id: '4',
    name: 'Serviços',
    icon: <Settings className="w-6 h-6" />,
    description: 'Manutenção e reparos',
    count: 67
  },
  {
    id: '5',
    name: 'Arte',
    icon: <Pencil className="w-6 h-6" />,
    description: 'Desenhos e pinturas',
    count: 31
  },
  {
    id: '6',
    name: 'Beleza',
    icon: <Scissors className="w-6 h-6" />,
    description: 'Cortes de cabelo e estética',
    count: 18
  }
];

const HomePage = () => {
  const getListingTypeIcon = (type: ListingType) => {
    switch (type) {
      case 'SALE': return <Tag className="w-3 h-3" />;
      case 'RENT': return <Timer className="w-3 h-3" />;
      case 'DONATION': return <Gift className="w-3 h-3" />;
      case 'EXCHANGE': return <Repeat className="w-3 h-3" />;
      default: return <Package className="w-3 h-3" />;
    }
  };

  const getListingTypeColor = (type: ListingType) => {
    switch (type) {
      case 'SALE': return 'bg-blue-600 text-white';
      case 'RENT': return 'bg-purple-600 text-white';
      case 'DONATION': return 'bg-green-600 text-white';
      case 'EXCHANGE': return 'bg-orange-600 text-white';
      default: return 'bg-gray-600 text-white';
    }
  };

  const formatPrice = (price: number, type: ListingType) => {
    if (type === 'DONATION') return 'Doação';
    if (type === 'EXCHANGE') return 'Troca';
    return price.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Hero Section */}
      <div className="bg-gradient-to-r from-blue-600 to-indigo-700 py-16">
        <div className="container mx-auto px-4">
          <h1 className="text-4xl font-bold text-white mb-4">
            Bem-vindo ao MoraHub
          </h1>
          <p className="text-xl text-gray-100">
            Conectando produtos e serviços nas moradias universitárias da UFMG
          </p>
        </div>
      </div>

      {/* Categories Section */}
      <div className="container mx-auto px-4 py-12">
        <div className="mb-8">
          <h2 className="text-2xl font-bold text-gray-800 mb-6">Categorias</h2>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
            {categories.map((category) => (
              <Card 
                key={category.id}
                className="hover:shadow-lg transition-shadow cursor-pointer group"
              >
                <CardContent className="p-6 text-center">
                  <div className="mb-4 flex justify-center">
                    <div className="p-3 rounded-full bg-blue-100 text-blue-600 group-hover:bg-blue-600 group-hover:text-white transition-colors">
                      {category.icon}
                    </div>
                  </div>
                  <h3 className="font-semibold text-gray-800 mb-1">
                    {category.name}
                  </h3>
                  <p className="text-sm text-gray-500 mb-2">
                    {category.description}
                  </p>
                  <Badge variant="secondary" className="bg-gray-100">
                    {category.count} itens
                  </Badge>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>

        {/* Featured Services */}
        <div className="mb-12">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-2xl font-bold text-gray-800">Serviços em Destaque</h2>
            <Badge className="bg-blue-100 text-blue-800 hover:bg-blue-200 cursor-pointer">
              Ver todos
            </Badge>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            {[
              {
                title: "Manutenção de Notebooks",
                description: "Formatação, limpeza e upgrades",
                icon: <Settings className="w-8 h-8" />,
                price: "A partir de R$ 50",
                rating: 4.8
              },
              {
                title: "Aulas Particulares",
                description: "Cálculo, Física e Programação",
                icon: <Pencil className="w-8 h-8" />,
                price: "R$ 60/hora",
                rating: 5.0
              },
              {
                title: "Refeições Caseiras",
                description: "Marmitas saudáveis e veganas",
                icon: <ChefHat className="w-8 h-8" />,
                price: "R$ 15/refeição",
                rating: 4.9
              }
            ].map((service, idx) => (
              <Card key={idx} className="hover:shadow-lg transition-shadow">
                <CardContent className="p-6">
                  <div className="flex items-start gap-4">
                    <div className="p-3 rounded-lg bg-blue-100 text-blue-600">
                      {service.icon}
                    </div>
                    <div>
                      <h3 className="font-semibold text-lg text-gray-800 mb-1">
                        {service.title}
                      </h3>
                      <p className="text-sm text-gray-500 mb-2">
                        {service.description}
                      </p>
                      <p className="font-medium text-green-600">
                        {service.price}
                      </p>
                      <div className="flex items-center mt-2">
                        {[...Array(5)].map((_, i) => (
                          <Star
                            key={i}
                            className={`w-4 h-4 ${
                              i < Math.floor(service.rating)
                                ? 'text-yellow-400 fill-current'
                                : 'text-gray-300'
                            }`}
                          />
                        ))}
                        <span className="ml-2 text-sm text-gray-600">
                          {service.rating}
                        </span>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

export default HomePage;